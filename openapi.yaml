openapi: 3.0.1
info:
  title: Snippets API
  description: Test description
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: contact@snippets.local
  license:
    name: BSD License
  version: v1
servers:
  - url: http://localhost:8000/api/v1
security:
  - Basic: []
paths:
  /post/:
    post:
      tags:
        - post
      summary: Create new post.
      description: Create post by authorized user.
      operationId: post_create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: integer
                  description: 'type: string, title: Title, maxLength: 250, minLength: 1'
                text:
                  type: integer
                  description: 'type: string, title: Text, minLength: 1'
        required: true
      responses:
        '200':
          description: Return all fields created post.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostCreate'
      x-codegen-request-body-name: data
  /post/{id}/:
    get:
      tags:
        - post
      summary: Mark post by authorized user.
      description: >-
        Mark by read post. In field read_by add authorized user in url
        parameter.

        Example url: /1/
      operationId: post_read
      parameters:
        - name: id
          in: path
          description: A unique integer value identifying this post.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
  /posts/:
    get:
      tags:
        - posts
      summary: List all posts.
      description: >-
        List all posts. If the user is logged in, it will return all the posts
        of other users.

        Sort by post creation date, fresh first.
      operationId: posts_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
  /registration/:
    post:
      tags:
        - registration
      summary: Registers a new user.
      description: Registers a new user.
      operationId: registration_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: response description
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
      x-codegen-request-body-name: data
  /subscribe/:
    post:
      tags:
        - subscribe
      summary: Create new subscribe.
      description: Create subscribe authorized user to another user's post.
      operationId: subscribe_create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_to:
                  type: integer
        required: true
      responses:
        '200':
          description: Return id subscribe, post and user.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSubscribeResponse'
      x-codegen-request-body-name: data
  /subscribe/{user_to}/:
    delete:
      tags:
        - subscribe
      summary: Delete subscribe.
      description: |-
        Delete subscribe authorized user by pk user in url parameter.
        Example url: /1/
      operationId: subscribe_delete
      parameters:
        - name: user_to
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content: {}
  /subscribers/posts/:
    get:
      tags:
        - subscribers
      summary: All posts from subscribers' feed
      description: |-
        List post for subscribe users. Sort by post creation date, fresh first.
        Filer by query parameter readed boolean type.
        Example filter param: /?readed=true
      operationId: subscribers_posts_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: readed
          in: query
          description: filter by readed parameter (boolean type).
          schema:
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
  /token/:
    post:
      tags:
        - token
      description: >-
        Takes a set of user credentials and returns an access and refresh JSON
        web

        token pair to prove the authentication of those credentials.
      operationId: token_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
      x-codegen-request-body-name: data
  /token/refresh/:
    post:
      tags:
        - token
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      operationId: token_refresh_create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
      x-codegen-request-body-name: data
  /users/:
    get:
      tags:
        - users
      summary: All users.
      description: Get all users and filter count posts.
      operationId: users_list
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: count_post
          in: query
          description: filter by count_post.
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                required:
                  - count
                  - results
                type: object
                properties:
                  count:
                    type: integer
                  next:
                    type: string
                    format: uri
                    nullable: true
                  previous:
                    type: string
                    format: uri
                    nullable: true
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserCountPost'
components:
  schemas:
    PostCreate:
      required:
        - text
        - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Title
          maxLength: 250
          minLength: 1
          type: string
        text:
          title: Text
          minLength: 1
          type: string
        user:
          title: User
          type: integer
    Post:
      required:
        - text
        - title
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        title:
          title: Title
          maxLength: 250
          minLength: 1
          type: string
        text:
          title: Text
          minLength: 1
          type: string
        user:
          title: User
          type: integer
        created_at:
          title: Created at
          type: string
          format: date-time
          readOnly: true
    User:
      required:
        - password1
        - password2
        - username
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        username:
          title: Username
          maxLength: 150
          minLength: 1
          pattern: ^[\w.@+-]+$
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        password1:
          title: Password1
          minLength: 1
          type: string
        password2:
          title: Password2
          minLength: 1
          type: string
    UserResponse:
      required:
        - username
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        username:
          title: Username
          maxLength: 150
          minLength: 1
          pattern: ^[\w.@+-]+$
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
    CreateSubscribeResponse:
      required:
        - user
        - user_to
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        user_to:
          title: User to
          type: integer
        user:
          title: User
          type: integer
    TokenObtainPair:
      required:
        - password
        - username
      type: object
      properties:
        username:
          title: Username
          minLength: 1
          type: string
        password:
          title: Password
          minLength: 1
          type: string
    TokenRefresh:
      required:
        - refresh
      type: object
      properties:
        refresh:
          title: Refresh
          minLength: 1
          type: string
        access:
          title: Access
          minLength: 1
          type: string
          readOnly: true
    UserCountPost:
      required:
        - count_post
        - username
      type: object
      properties:
        id:
          title: ID
          type: integer
          readOnly: true
        username:
          title: Username
          maxLength: 150
          minLength: 1
          pattern: ^[\w.@+-]+$
          type: string
          description: >-
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
        count_post:
          title: Count post
          type: integer
  securitySchemes:
    Basic:
      type: http
      scheme: basic
